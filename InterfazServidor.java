/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package socketServidor;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;

/**
 *
 * @author Franc
 */
public class InterfazServidor extends javax.swing.JFrame implements Runnable {

    /**
     * Creates new form InterfazServidor
     */
    ServerSocket Servidor; 
    Socket Cliente;
    int puerto = 9000;
    String iP = "192.168.1.106";
    DataOutputStream salida;
    DataInputStream entrada;
    boolean switchServidor = false;
    Thread hilo = new Thread(this);
    
    public InterfazServidor() {
        initComponents();
        setLocationRelativeTo(null);
        setResizable(false);
        setTitle("Cliente de Votaci√≥n");
        //hilo.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SwitchDelServidor = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        MensajesResividos = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        SwitchDelServidor.setText("Levantar Servidor");
        SwitchDelServidor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SwitchDelServidorActionPerformed(evt);
            }
        });

        MensajesResividos.setColumns(20);
        MensajesResividos.setRows(5);
        jScrollPane1.setViewportView(MensajesResividos);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(136, 136, 136)
                        .addComponent(SwitchDelServidor)))
                .addContainerGap(122, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                .addComponent(SwitchDelServidor)
                .addGap(58, 58, 58))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SwitchDelServidorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SwitchDelServidorActionPerformed
        // TODO add your handling code here:
        if(switchServidor){
            switchServidor=false;
            SwitchDelServidor.setText("Levantar Servidor");
        }else{
            switchServidor = true;
            hilo.start();
            SwitchDelServidor.setText("Apagar Servidor");
        }
    }//GEN-LAST:event_SwitchDelServidorActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InterfazServidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InterfazServidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InterfazServidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InterfazServidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InterfazServidor().setVisible(true);
            }
        });
    }
    
    @Override 
    public void run(){
        try{
            Servidor = new ServerSocket(puerto);
            while(true){
                Cliente = Servidor.accept();
                entrada = new DataInputStream(Cliente.getInputStream());
                String msgResivido = entrada.readUTF();
                MensajesResividos.append(msgResivido+"\n");
                Cliente.close();
                if(switchServidor == false){//if(msgResivido.equalsIgnoreCase("Fin")){
                    Servidor.close();
                    break;
                }
            }
        }catch(IOException e){
            e.printStackTrace();
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea MensajesResividos;
    private javax.swing.JButton SwitchDelServidor;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
